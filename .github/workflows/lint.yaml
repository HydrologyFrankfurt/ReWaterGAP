name: Pylint

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint==3.1.0

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') --rcfile=.github/workflows/pylintrc  --ignore=docs --output=lint.txt || true
      - name: Display lint.txt content
        run: |
          cat lint.txt

      - name: Extract lint score
        id: extract_lint_score
        run: |
          # Extract the overall lint score from the pylint output
          LINT_SCORE=$(grep "Your code has been rated" lint.txt | sed 's/.*rated at //')
          echo "Lint score: $LINT_SCORE"
          echo "lint_score=$LINT_SCORE" >> $GITHUB_ENV

      - name: Fail if lint score is less than 9
        run: |
          if [ "$(echo ${{ env.lint_score }} | cut -d '/' -f 1)" -lt 9 ]; then
            echo "Lint score is less than 9. Failing the job."
            exit 1
          fi
