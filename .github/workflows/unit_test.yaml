name: Lint and Test Python Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Cache dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pylint

      # Step 5: Upload dependency cache
      - name: Cache dependencies for reuse
        id: setup
        run: echo "Dependencies installed and cached."

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Use dependencies from cache
      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      # Step 4: Run Pylint
      - name: Run Pylint
        id: lint
        run: |
          pylint --rcfile=.github/.pylintrc $(find . -name "*.py" -not -path "./docs/*") > pylint_report.txt || true
          score=$(grep "Your code has been rated at" pylint_report.txt | tail -1 | awk '{print $7}' | cut -d'/' -f1)
          echo "::set-output name=lint_score::$score"

      # Step 5: Upload lint results
      - name: Upload Pylint Report
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report
          path: pylint_report.txt

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Use dependencies from cache
      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      # Step 4: Run tests
      - name: Run Unit Tests
        id: tests
        run: |
          python run_test.py
